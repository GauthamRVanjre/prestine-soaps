// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productName String @unique
  productCategory Category
  createdDate DateTime @default(now())
  soapProductId String? @db.ObjectId @unique
  soapProduct soapProductItems? @relation(fields: [soapProductId],references: [id])
  chocolateProductId String? @db.ObjectId @unique
  chocolateProduct chocolateProductItems? @relation(fields: [chocolateProductId],references: [id])
  productOrdersId String[] @db.ObjectId
  productOrders Orders[] @relation(fields: [productOrdersId],references: [id])
}

model soapProductItems{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  soapBase String?
  soapBasePrice String?
  EO String?
  EOPrice String?
  FO String?
  FOPrice String?
  oils String?
  oilPrice String?
  clay String?
  clayPrice String?
  Bottles String?
  BottlePrice String?
  wrappingPapers String?
  wrappingPapersPrice String?
  packingBags String?
  packingBagsPrice String?
  productId Product?
}

model chocolateProductItems{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  chocolateBags String?
  chocolateBagsPrice String?
  chocolateEO String?
  chocolateEOPrice String?
  dryFruits String?
  dryFruitsPrice String?
  milkMaid String?
  milkMaidPrice String?
  coconutPowder String?
  coconutPowderPrice String?
  chocolateWrappingPaper String?
  chocolateWrappingPaperPrice String?
  chocolateMould String?
  chocolateMouldPrice String?
  chocolatePackingBags String?
  chocolatePackingBagsPrice String?
  productId Product?
}

enum Category{
  Soap
  Chocolate
}

model Orders{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  productNameId String[] @db.ObjectId
  productNames Product[] @relation(fields: [productNameId], references: [id])
}

